/*!

  \page bob_slam bob_slam

## Description

Contains the Simultaneous Localization and Mapping (SLAM) algorithms.

The algorithm in this package accepts lidar data and transform data. It uses this information to build a map. It also publishes corrections to the robot position for the rest of the system.

The algorithm updates the map through bob::IProbabilityMap. 

The basic behavior of the algorithm is as follows:

1. A new raw scan is received. This scan is processed using bob::LidarProcessor.

2. A new pose estimate for the robot is calculated using wheel odometry.

3. Iterative closest point scan matching is used to refine the estimate of the robot pose. A pose is found which closesly aligns the Lidar reading with the current map. See the bob::ICPScanMatcher class for more details on how this is done. It is essentially a gradient descent algorithm. A 3D vector [x y theta]' is calculated for the direction of steepest descent. Then, the pose is adjusted by this vector. This process is repeated, giving successively more accurate approximations of the robot pose. Only the beam endpoints are considered in this calculation, for speed considerations. 

4. The pose calculated from the previous step is now assumed to be highly accurate. The ProbabilityMap is updated using the lidar reading and the new estimate for the pose.

5. The new pose estimate and map are published so they may be used by the rest of the system.

## Important Classes

bob::SlamProcessor

bob::ICPScanMatcher

bob::SlamProcessor

bob::MapFiller

bob::ScanScoring

 */
